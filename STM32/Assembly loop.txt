🧠 ARM Cortex-M3 Assembly Cheat Sheet (Loop + If/Else Style)
🔹 ১. Basic Structure
.syntax unified
.cpu cortex-m3
.thumb
.global main
main:

🧩 IF / ELSE (C → Assembly)
🧠 C Code
if (r0 == 5)
    r1 = 1;
else
    r1 = 0;

⚙️ Assembly
    MOV  r0, #5
    CMP  r0, #5        @ compare r0 with 5
    BNE  else_part     @ if not equal -> jump else_part
    MOV  r1, #1        @ true part
    B    end_if
else_part:
    MOV  r1, #0        @ false part
end_if:

🔁 WHILE Loop
🧠 C Code
while (r0 < 10)
{
    r0++;
}

⚙️ Assembly
    MOV r0, #0
while_loop:
    CMP r0, #10
    BGE end_while      @ if r0 >= 10, exit loop
    ADD r0, r0, #1
    B while_loop
end_while:

🔁 DO-WHILE Loop
🧠 C Code
do {
    r0++;
} while (r0 < 10);

⚙️ Assembly
    MOV r0, #0
do_loop:
    ADD r0, r0, #1
    CMP r0, #10
    BLT do_loop

🔁 FOR Loop
🧠 C Code
for (r0 = 0; r0 < 5; r0++)
    r1 += r0;

⚙️ Assembly
    MOV r0, #0        @ i = 0
    MOV r1, #0        @ sum = 0
for_loop:
    CMP r0, #5
    BGE end_for
    ADD r1, r1, r0
    ADD r0, r0, #1
    B for_loop
end_for:

⚖️ Nested IF
🧠 C Code
if (r0 < 10)
{
    if (r1 == 5)
        r2 = 1;
}

⚙️ Assembly
    CMP r0, #10
    BGE skip_all
    CMP r1, #5
    BNE skip_all
    MOV r2, #1
skip_all:

🔄 Infinite Loop
loop_forever:

    B loop_forever















🔧 Example: Combine All Concepts
🧠 C Code
sum = 0;
for (i = 0; i < 5; i++) {
    if (i % 2 == 0)
        sum += i;
}

⚙️ Assembly
    MOV r0, #0     @ i = 0
    MOV r1, #0     @ sum = 0
for_loop:
    CMP r0, #5
    BGE end_for
    AND r2, r0, #1
    CMP r2, #0
    BNE skip_add
    ADD r1, r1, r0
skip_add:
    ADD r0, r0, #1
    B for_loop
end_for:
